+.
I will generate two tables of contents. One will list only the chapters
and sections. The other will list all section titles, including sub- and
subsub-sections.

+ Private Functions

void output_toc(int level)
{
  docnode_t *N;
  int font, style;
  int start;
  elt_t *E;

  page_init();
  inline_style("link", &style, &font);

  for(N=doc->next;N!=doc;N=N->next)
  {
    if (N->kind!='S' || N->level<=level) continue;
    start= seqlen;
    output_elt(0,0); 
    for(E=N->elts->next;E!=N->elts;E=E->next)
    {
      output_elt(style, lookup_word(font, E->txt));
    }
    record_decor(style, start+1, seqlen-1);
    record_link(start+1, seqlen-1, N->s_number);
    coprint("  canvas->bullet_println(%d, %d, %d);\n",
                   4-N->level+1, start, seqlen-1);
  }

  printf("static void tf_toc%d(FYGfxCanvas* canvas) {\n",level);
  print_table_coord_variables();
  printf("canvas->reset_doc();\n");

  print_command_buffer();

  printf(" canvas->end_doc(tf_toc%d);\n",level);
  printf("}\n");

  printf("static void cf_toc%d(FYHelpWin *win) {\n",level);
  printf("  FYGfxCanvas *canvas= win->canvas;\n");

  print_seq_buffer();

  print_bgrects();
  print_imagedefs();
  print_links();

  printf("  static const sipair_t empty[]= { { NULL, 0 } };\n");
  printf("  win->set_section_menu(empty);\n");
  printf("  tf_toc%d(canvas);\n",level);
  printf("}\n");
}
